// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id
  email         String         @unique
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  resumes       Resume[]
  jobs          Job[]
  coverLetters  CoverLetter[]
}

model Resume {
  id            String         @id @default(cuid())
  userId        String
  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  title         String
  content       String         @db.Text
  atsScore      Int?
  feedback      String?        @db.Text
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  jobs          Job[]
  coverLetters  CoverLetter[]
}

model Job {
  id            String         @id @default(cuid())
  userId        String
  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  resumeId      String?
  resume        Resume?        @relation(fields: [resumeId], references: [id], onDelete: SetNull)
  title         String
  company       String
  description   String         @db.Text
  tailoredResume String?       @db.Text
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  coverLetters  CoverLetter[]
}

model CoverLetter {
  id            String         @id @default(cuid())
  userId        String
  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  resumeId      String?
  resume        Resume?        @relation(fields: [resumeId], references: [id], onDelete: SetNull)
  jobId         String?
  job           Job?           @relation(fields: [jobId], references: [id], onDelete: SetNull)
  content       String         @db.Text
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}
